{"version":3,"sources":["components/Recipe.js","components/Shoppinglist.js","components/Recipelist.js","App.js","reportWebVitals.js","index.js"],"names":["Recipe","name","instruction","picture","video","handleAdd","useState","noInst","showInst","setShowInst","details","className","src","alt","title","type","onClick","oldState","Shoppinglist","measures","handleReset","ingredientPicture","measure","setMeasure","setPicture","useEffect","window","scrollTo","checkedList","handleClick","e","target","checked","push","id","filter","item","map","x","index","htmlFor","newMeasure","newPicture","delIndex","i","findIndex","includes","sort","a","b","length","splice","preventDefault","Recipelist","recipes","setRecipes","ingredientsAll","setIngredientsAll","fetch","then","resp","json","recipeSum","meals","meal","strMeal","idMeal","strMealThumb","ingredients","collectIng","collectMes","strInstructions","replaceLink","pictureIng","picIng","strYoutube","replace","allIng","allMes","alert","ingredientsList","recipeList","recipe","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","console","log"],"mappings":"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","file":"static/js/main.c26e4272.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport '../css/Recipe.css';\r\n\r\nexport default function Recipe({name, instruction, picture, video, handleAdd}) {\r\n    \r\n    const [noInst, setNoInst] = useState([]);\r\n    const [showInst, setShowInst] = useState(true);\r\n\r\n    //Show/hide the instruction\r\n    const details = showInst ? noInst : instruction;\r\n    const handleShow = () => {\r\n        setShowInst((oldState) => !oldState);\r\n    }\r\n\r\n    return (\r\n        <div className=\"recipe\" >\r\n            <h2>{name}</h2>\r\n            <div className=\"media\">\r\n                <img className=\"pic\" src={picture} alt={name} />\r\n                \r\n                <div className=\"vid\">\r\n                <iframe className=\"respvid\" title={name} src={video}></iframe>\r\n                </div>\r\n            \r\n            </div>\r\n\r\n            <div className=\"buttons\">\r\n                <button type=\"button\" onClick={handleShow}>\r\n                Show or hide the instructions</button>\r\n                <button type=\"submit\" onClick={handleAdd}>\r\n                Add all ingredients to the shopping list\r\n                </button>\r\n            </div>\r\n\r\n            <div className=\"details\">\r\n                <h3>Instructions for {name}</h3> \r\n                {details}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React, {useState, useEffect} from 'react';\r\nimport '../css/Shoppinglist.css';\r\n\r\nexport default function Shoppinglist({name, measures, handleReset, ingredientPicture}) {\r\n    \r\n    const [measure, setMeasure] = useState(measures)\r\n    const [picture, setPicture] = useState(ingredientPicture)\r\n\r\n    //Jumping to the top of the page after rendering\r\n    useEffect(() => {\r\n        window.scrollTo(0, 0);\r\n      }, []);\r\n\r\n    //Collecting the checked ingredients\r\n    let checkedList = [];\r\n    const handleClick = (e) => {  \r\n        if (e.target.checked) {\r\n           checkedList.push(e.target.id);\r\n        } else { \r\n            checkedList = checkedList.filter(item => item !== e.target.id);\r\n        }\r\n    }\r\n\r\n    //Deleting the checked ingredients\r\n    const handleClear = () => {\r\n        let newMeasure = [];\r\n        let newPicture = [...picture];\r\n        let delIndex = [];\r\n\r\n        //Getting the index of checked items\r\n        for (let i=checkedList.length-1; i>-1; i--) { \r\n            delIndex.push(measure.findIndex(item => checkedList[i].includes(item)));\r\n            delIndex.sort((a, b) => b-a);\r\n        }\r\n\r\n        //Deleting the checked picture\r\n        for (let i=0; i<checkedList.length; i++) {          \r\n           newPicture.splice(delIndex[i],1);\r\n        }\r\n       \r\n        //Getting the unchecked list\r\n        newMeasure = measure.filter(item => !checkedList.includes(item));\r\n\r\n        setPicture(newPicture);\r\n        setMeasure(newMeasure);   \r\n        window.scrollTo(0, 0);\r\n    }\r\n\r\n    //Reloading the ingredients\r\n    const handleReload = (e) => {\r\n        e.preventDefault();\r\n        setMeasure(measures);\r\n        setPicture(ingredientPicture);\r\n        window.scrollTo(0, 0);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n        <div className=\"coverpage\"></div>\r\n            <form>\r\n                <div className=\"recName\">\r\n                    <h2>Shopping list</h2>\r\n                    {name}\r\n                </div>\r\n                                                         \r\n                <div className=\"flex\">\r\n                    <div className=\"column1\">\r\n                    {measure.map( (x, index) => <div className=\"ingredient\"><input type=\"checkbox\" onClick={handleClick} id={x} key={index}/> <label htmlFor={x}> {x}</label> </div>)}\r\n                    </div>\r\n                    <div className=\"column2\">\r\n                    {picture.map( (x, index) => <div className=\"ingPicture\"><img src={x} alt={x} key={index}/></div>)} \r\n                    </div>\r\n                </div>\r\n                                                            \r\n                <div>\r\n                    <button type=\"reset\" onClick={handleClear}>Delete selected</button>\r\n                </div>\r\n                <div>    \r\n                    <button type=\"submit\" onClick={handleReload}>Reload the list</button>\r\n                </div>\r\n                <div>\r\n                    <button type=\"reset\" onClick={handleReset}>Delete the list</button>\r\n                </div>                  \r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n","import React, {useEffect, useState} from 'react';\r\nimport Recipe from './Recipe';\r\nimport Shoppinglist from './Shoppinglist';\r\nimport '../css/Recipelist.css';\r\n\r\nexport default function Recipelist() {\r\n    const [recipes, setRecipes] = useState([]);\r\n    const [ingredientsAll, setIngredientsAll] = useState([]);\r\n\r\n    const url = \"https://www.themealdb.com/api/json/v1/1/random.php\";\r\n    \r\n    //Getting a new meal\r\n    const handleNewMeal = (e) => {\r\n        e.preventDefault();\r\n        setRecipes([]);\r\n    }\r\n    \r\n    useEffect(() => {\r\n        if (recipes.length === 0) {\r\n          fetch(url)\r\n            .then((resp) => resp.json())\r\n            .then((recipes) => {\r\n                //const meal = recipes.meals[0];\r\n                function getRecipe(meal) {\r\n                    return {\r\n                        name: meal.strMeal,\r\n                        id: meal.idMeal,\r\n                        picture: meal.strMealThumb,\r\n                        ingredients: collectIng(meal),\r\n                        measures: collectMes(meal),\r\n                        instruction: meal.strInstructions,\r\n                        video: replaceLink(meal),\r\n                        ingredientPicture: pictureIng(meal),\r\n                    };\r\n                }\r\n                const recipeSum = recipes.meals.map(getRecipe);\r\n                setRecipes(recipeSum);               \r\n            });\r\n        };\r\n    });\r\n    \r\n    //Gnerating the link of the ingredient picture\r\n    const pictureIng = (meal) => {\r\n        const picIng = [];\r\n            for (let ingredients in meal) {\r\n                for (let i=1; i<21; i++){\r\n                    if (ingredients === `strIngredient${i}` && `${meal[ingredients]}` !== \"\" && `${meal[ingredients]}` !== \"null\") {\r\n                        picIng.push(`https://www.themealdb.com/images/ingredients/${meal[ingredients]}.png`);\r\n                    }  \r\n                }\r\n            }   \r\n        return picIng;\r\n    }\r\n\r\n    //Correcting the Youtube link\r\n    const replaceLink = (meal) => {\r\n        const oldYoutube = meal.strYoutube;\r\n        const newYoutube = oldYoutube.replace(\"watch?v=\",\"embed/\");\r\n        return newYoutube;\r\n    }\r\n\r\n    //Collecting the ingredients\r\n    const collectIng = (meal) => {\r\n        const allIng = [];\r\n        for (let ingredients in meal) {\r\n            for (let i=1; i<21; i++){\r\n                if (ingredients === `strIngredient${i}` && `${meal[ingredients]}` !== \"\" && `${meal[ingredients]}` !== \"null\" ) {\r\n                    allIng.push(`${meal[ingredients]}`);\r\n                }  \r\n            }\r\n        }\r\n        return allIng;\r\n    }\r\n\r\n    //Collecting the measures\r\n    const collectMes = (meal) => {\r\n        const allMes = [];\r\n        for (let measures in meal) {\r\n            for (let i=1; i<21; i++){\r\n                if (measures === `strMeasure${i}` && `${meal[measures]}` !== \" \" && `${meal[measures]}` !== \"\" && `${meal[measures]}` !== \"null\" ) {\r\n                    allMes.push(`${meal[measures]} ${meal[`strIngredient${i}`]}`);\r\n                }  \r\n            }\r\n        }\r\n        return allMes;\r\n    }\r\n\r\n    //Adding all ingredients to the shopping list\r\n    const handleAdd = (e) => {\r\n        e.preventDefault();\r\n        window.scrollTo(0, 0);  \r\n        alert('You have added all ingredients to the shopping list.');\r\n        setIngredientsAll(ingredientsList);\r\n    }\r\n\r\n    //Deleting the shopping list\r\n    const handleReset = (e) => {\r\n        e.preventDefault();\r\n        setIngredientsAll(ingredientsAll);\r\n    }\r\n\r\n    const recipeList = recipes.map((recipe) => (\r\n        <Recipe \r\n        name={recipe.name}\r\n        id={recipe.id}\r\n        key={recipe.id}\r\n        picture={recipe.picture}\r\n        handleAdd={handleAdd}\r\n        instruction={recipe.instruction}\r\n        video={recipe.video}\r\n        />\r\n    ));\r\n\r\n    const ingredientsList = recipes.map((recipe) => (\r\n        <Shoppinglist \r\n        name={recipe.name}\r\n        id={recipe.id}\r\n        key={recipe.id}\r\n        picture={recipe.picture}  \r\n        measures={recipe.measures}\r\n        handleReset={handleReset}\r\n        ingredientPicture={recipe.ingredientPicture}\r\n        />\r\n    ));\r\n\r\n    return (\r\n        <div>\r\n            <button type=\"submit\" onClick={handleNewMeal}>\r\n            Get a random meal\r\n            </button>\r\n            {recipeList}\r\n            {ingredientsAll}\r\n        </div>\r\n    )\r\n}\r\n","import './css/App.css';\nimport Recipelist from './components/Recipelist';\n\nexport default function App() {\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        Enjoy your meal!\n      </header>\n      <Recipelist/>\n    \n    </div>\n  );\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './css/index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals(console.log);\n"],"sourceRoot":""}